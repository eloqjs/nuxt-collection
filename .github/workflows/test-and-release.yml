# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test and Release

on:
  push:
    branches: [
        master,
        dev,
        alpha,
        beta,
        next,
        next-major
    ]

  pull_request:
    branches: [
        master,
        dev,
        alpha,
        beta,
        next,
        next-major
    ]

jobs:
  pre_job:
    name: Pre Job

    runs-on: ubuntu-latest

    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}

    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ github.token }}
          paths_ignore: '["**/*.md", ".editorconfig", ".gitignore", ".eslintignore", ".prettierignore"]'
          do_not_skip: '["workflow_dispatch", "schedule", "push"]'

  test:
    name: Test

    needs: pre_job

    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest ]
        node-version: [ 12.x, 14.x ]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2-beta
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Lint
        run: yarn lint

      - name: Test
        run: yarn test

  release:
    name: Release

    needs: test

    runs-on: ${{ matrix.os }}

    if: github.event_name == 'push'

    strategy:
      matrix:
        os: [ ubuntu-latest ]
      fail-fast: true

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: 12.x-${{ runner.OS }}-build-${{ hashFiles('yarn.lock') }}

      - name: Install Dependencies
        if: steps.cache-modules.outputs.cache-hit != 'true'
        run: yarn install

      - name: Build
        run: yarn build

      - name: Test
        run: yarn test

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: ./coverage

      - name: Upload Coverage to Code Climate
        uses: paambaati/codeclimate-action@v2.7.4
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CODECLIMATE_REPORTER_ID }}

      - name: Release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
